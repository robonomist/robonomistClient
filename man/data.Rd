% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/frontend.R
\name{data}
\alias{data}
\alias{data_get}
\alias{data_search}
\title{Search and get data from Robonomist Data Server}
\usage{
data(
  pattern = "",
  dl_filter = NULL,
  labels = TRUE,
  lang = NULL,
  na.rm = FALSE,
  tidy_time = NULL,
  ...
)

data_get(
  id,
  dl_filter = NULL,
  labels = TRUE,
  lang = NULL,
  na.rm = FALSE,
  tidy_time = NULL,
  ...
)

data_search(pattern = "")
}
\arguments{
\item{pattern}{string, Search query or table id, possibly followed by a \code{§}-filter.}

\item{dl_filter}{list or named vector passed to datasource download functions for filtering incoming data. Supported by tulli, OECD and ECB.}

\item{labels}{logical, Some datasources can return labelled or coded data.}

\item{lang}{Two-letter language code, e.g. "en" or "sv".}

\item{na.rm}{Px-file based datasources return a table with a combination of all categories. Missing values can be filtered when reading the file to improve preformance.}

\item{tidy_time}{logical, If TRUE, the time dimension is parsed into Date class and renamed \code{time}. If NULL, the datasource specific default will be used.}

\item{...}{Datasource-specific arguments. TODO}

\item{id, }{string, Exact robonomist_id}
}
\description{
\code{data()} is a convenience function that searches the database and returns
\enumerate{
\item search results if multiple matching tables are found, and
\item data if only one match is found.
}

\code{data_get()} returns data without performing searching or pattern filters. In production code it is better to use \code{data_get()} instead of \code{data()} as it slightly faster and does not depend on the search mechanism.  \code{data_get()} will result in error, if no match exists.

\code{data_search()} only performs a search and returns the results.
}
\section{\verb{§}-filter}{
The \code{data()} function allows for a special \code{§}-filter. When the pattern matches a single table and the function returns a data frame, the \code{§}-filter can be used to subset rows of data frame. The tibble is filterd by sequence of regular expressions separated by section sign \code{§}. The regular expression are applied to data frame's variables sequentially.

If the last variable is a date, it is used as a start date filter.
}

\section{Download filter}{
Some datasources (e.g. datasets "ecb" & "tulli") do not allow downloading full data tables, nor is it always preferred due to the large large size of table. For these datasources the user must provide a download filter via the \code{dl_filter} argument. When the argument is left as \code{NULL}, the  \code{data} function will return a list of variables and potential values. This list can be used to construct a suitable download filter.

Generally, \code{dl_filter} should be named list where names are variable names and values character vectors of selected values (see Examples). Alternatively, some datasources allow for a dot-separated string to define a download filter.
}

\examples{
\dontrun{
## Return information on the data table structure
data("ecb/AME")
## Example of download filter
data("ecb/AME", dl_filter = list(ame_ref_area = "FIN"))

data(
  "ecb/FM",
  dl_filter = list(
    freq = "M",
    provider_fm_id = "EURIBOR1YD_"
  )
)
data("ecb/FM", dl_filter = "M.U2.EUR.RT.MM.EURIBOR1YD_.HSTA")

data("tulli/uljas_cpa2008",
  dl_filter = list(
    "Tavaraluokitus CPA2008_2" = "*A-X",
    "Aika" = c("201505", "201506"),
    "Maa" = "=ALL",
    "Suunta" = "=FIRST 1",
    "Indikaattorit" = "=FIRST 1"
  )
)
}

}
